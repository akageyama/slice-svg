module svglib_m
  use const_base_m
  use fileut_m
  use ut_m
  implicit none
  private

  type, public :: svglib_fig_t
    char(len=300) :: file_name
    integer :: width, height
    integer :: file_unit
  contains
    procedure :: open => svglib__open
    procedure :: close => svglib__close
  end type svglib_fig_t

contains


  subroutine print_footer( unit )
    integer <in> :: unit
    write(unit, *) ' '
    write(unit, *) '</svg>'
  end subroutine print_footer


  subroutine print_header( unit, width, height )
    integer <in> :: unit, width,  height

    char(len=*), parameter :: STR_XMLNS = 'xmlns="http://www.w3.org/2000/svg"'
    char(len=100) :: str_width, str_height, str_viewbox

    write(str_width, "(a, i0, a)") 'width="', width, '"'
    write(str_height, "(a, i0, a)") 'height="', height, '"'
    write(str_viewbox, "(a, i0, 1x, i0, 1x, i0, 1x, i0, a)") 'viewBox="', 0, 0, width, height, '">'

    write(unit, *) '<svg '//STR_XMLNS//' '//trim(str_width)//' '//trim(str_height)//' '//trim(str_viewbox)
    write(unit, *) '<!--'
    write(unit, *) '   SVG file generated by __MODULE__'
    write(unit, *) '                      on '//ut__date_and_time()
    write(unit, *) '-->'
    write(unit, *) ''    
  end subroutine print_header



  subroutine svglib__close( this )
    class(svglib_fig_t) <in> :: this

    call print_footer( this.file_unit )
    call fileut__close( this.file_unit )

  end subroutine svglib__close


  subroutine svglib__open( this, file_name, width, height )
    class(svglib_fig_t) <io> :: this
    char(len=*) <in> :: file_name
    integer <optin> :: width, height

    this.file_name = trim(file_name)

    this.file_unit = fileut__open( file=trim(file_name),  &
                                   action="readwrite",    &
                                   status="unknown" ) 
    call iSet_width_and_height
    call print_header( this.file_unit, this.width, this.height )

  contains

    subroutine iSet_width_and_height
      if ( present(width) ) then
        this.width = width
      else
        this.width = 480 ! default value
      end if
  
      if ( present(height) ) then
        this.height = height
      else
        this.height = 640 ! default value
      end if
    end subroutine iSet_width_and_height

  end subroutine svglib__open

end module svglib_m
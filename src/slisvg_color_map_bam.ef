module slisvg_color_map_bam_m
  implicit none
  private
  public :: slisvg_color_map_bam__0green_to_1red,  &
            slisvg_color_map_bam__print_colorbar

  integer <const> :: NPOINTS = 256

  integer :: i

  real, parameter :: z(NPOINTS) = [(real(i-1)/(NPOINTS-1), i=1,NPOINTS)]

  ! === Official "BAM" colormap (Scientific Colour Maps v8, sRGB) ===
  ! Source: Fabio Crameri (2023), "Scientific colour maps," www.fabiocrameri.ch/colourmaps/

  real <const> :: r(NPOINTS) = [  &
      0.396221, 0.405071, 0.413908, 0.422702, 0.431480, 0.440186, 0.448852, 0.457446,  &
      0.465986, 0.474476, 0.482885, 0.491248, 0.499512, 0.507735, 0.515865, 0.523942,  &
      0.531939, 0.539852, 0.547699, 0.555458, 0.563154, 0.570749, 0.578269, 0.585715,  &
      0.593064, 0.600322, 0.607503, 0.614575, 0.621566, 0.628471, 0.635265, 0.641970,  &
      0.648573, 0.655073, 0.661482, 0.667785, 0.673982, 0.680079, 0.686090, 0.692006,  &
      0.697824, 0.703570, 0.709238, 0.714827, 0.720359, 0.725835, 0.731247, 0.736614,  &
      0.741931, 0.747201, 0.752415, 0.757585, 0.762697, 0.767757, 0.772762, 0.777711,  &
      0.782590, 0.787410, 0.792161, 0.796843, 0.801459, 0.806005, 0.810475, 0.814878,  &
      0.819205, 0.823465, 0.827650, 0.831770, 0.835811, 0.839791, 0.843693, 0.847537,  &
      0.851315, 0.855038, 0.858692, 0.862297, 0.865836, 0.869326, 0.872763, 0.876148,  &
      0.879485, 0.882775, 0.886025, 0.889223, 0.892381, 0.895493, 0.898559, 0.901586,  &
      0.904569, 0.907510, 0.910403, 0.913249, 0.916044, 0.918796, 0.921500, 0.924149,  &
      0.926743, 0.929283, 0.931766, 0.934188, 0.936556, 0.938849, 0.941077, 0.943239,  &
      0.945326, 0.947335, 0.949262, 0.951110, 0.952868, 0.954533, 0.956105, 0.957573,  &
      0.958939, 0.960196, 0.961338, 0.962365, 0.963273, 0.964053, 0.964708, 0.965233,  &
      0.965625, 0.965883, 0.966004, 0.965987, 0.965833, 0.965541, 0.965110, 0.964541,  &
      0.963832, 0.962982, 0.961977, 0.960826, 0.959505, 0.958017, 0.956346, 0.954487,  &
      0.952432, 0.950180, 0.947725, 0.945064, 0.942194, 0.939113, 0.935826, 0.932323,  &
      0.928614, 0.924695, 0.920564, 0.916225, 0.911675, 0.906913, 0.901935, 0.896749,  &
      0.891343, 0.885727, 0.879889, 0.873838, 0.867568, 0.861075, 0.854364, 0.847429,  &
      0.840281, 0.832904, 0.825314, 0.817511, 0.809502, 0.801283, 0.792872, 0.784272,  &
      0.775481, 0.766526, 0.757409, 0.748144, 0.738738, 0.729203, 0.719562, 0.709818,  &
      0.699987, 0.690091, 0.680134, 0.670152, 0.660127, 0.650098, 0.640071, 0.630054,  &
      0.620072, 0.610116, 0.600220, 0.590378, 0.580611, 0.570913, 0.561303, 0.551785,  &
      0.542354, 0.533021, 0.523790, 0.514665, 0.505631, 0.496719, 0.487925, 0.479221,  &
      0.470630, 0.462142, 0.453764, 0.445490, 0.437336, 0.429267, 0.421300, 0.413451,  &
      0.405696, 0.398033, 0.390461, 0.382998, 0.375613, 0.368332, 0.361120, 0.354001,  &
      0.346969, 0.339994, 0.333085, 0.326204, 0.319400, 0.312601, 0.305861, 0.299097,  &
      0.292330, 0.285551, 0.278784, 0.271947, 0.265112, 0.258231, 0.251336, 0.244348,  &
      0.237381, 0.230295, 0.223223, 0.216083, 0.208861, 0.201589, 0.194315, 0.186913,  &
      0.179463, 0.171937, 0.164360, 0.156663, 0.148841, 0.140972, 0.132915, 0.124705,  &
      0.116381, 0.107779, 0.098981, 0.089900, 0.080424, 0.070529, 0.060124, 0.049098   &
   ]

  real <const> :: g(NPOINTS) = [  &
      0.008120, 0.018136, 0.028663, 0.040100, 0.051043, 0.061170, 0.070776, 0.079825,  &
      0.088578, 0.096961, 0.105159, 0.113219, 0.120980, 0.128684, 0.136227, 0.143720,  &
      0.151068, 0.158372, 0.165535, 0.172692, 0.179773, 0.186802, 0.193793, 0.200686,  &
      0.207599, 0.214443, 0.221263, 0.228042, 0.234793, 0.241495, 0.248193, 0.254854,  &
      0.261477, 0.268085, 0.274690, 0.281274, 0.287850, 0.294422, 0.300996, 0.307579,  &
      0.314190, 0.320832, 0.327489, 0.334225, 0.341004, 0.347863, 0.354808, 0.361830,  &
      0.368954, 0.376180, 0.383507, 0.390940, 0.398474, 0.406121, 0.413861, 0.421699,  &
      0.429651, 0.437698, 0.445812, 0.454037, 0.462331, 0.470716, 0.479167, 0.487694,  &
      0.496265, 0.504919, 0.513622, 0.522364, 0.531163, 0.539993, 0.548872, 0.557765,  &
      0.566693, 0.575640, 0.584597, 0.593569, 0.602547, 0.611531, 0.620515, 0.629479,  &
      0.638442, 0.647388, 0.656316, 0.665206, 0.674072, 0.682901, 0.691686, 0.700422,  &
      0.709106, 0.717722, 0.726269, 0.734744, 0.743137, 0.751441, 0.759641, 0.767750,  &
      0.775755, 0.783650, 0.791422, 0.799080, 0.806609, 0.814002, 0.821269, 0.828393,  &
      0.835374, 0.842209, 0.848885, 0.855405, 0.861758, 0.867942, 0.873944, 0.879765,  &
      0.885401, 0.890837, 0.896075, 0.901100, 0.905916, 0.910508, 0.914872, 0.919005,  &
      0.922910, 0.926568, 0.929988, 0.933158, 0.936091, 0.938770, 0.941205, 0.943403,  &
      0.945364, 0.947096, 0.948607, 0.949910, 0.951014, 0.951915, 0.952631, 0.953159,  &
      0.953495, 0.953643, 0.953600, 0.953366, 0.952937, 0.952313, 0.951501, 0.950494,  &
      0.949292, 0.947902, 0.946317, 0.944549, 0.942591, 0.940444, 0.938111, 0.935596,  &
      0.932894, 0.930017, 0.926953, 0.923715, 0.920288, 0.916687, 0.912903, 0.908938,  &
      0.904797, 0.900475, 0.895977, 0.891301, 0.886455, 0.881434, 0.876243, 0.870890,  &
      0.865376, 0.859709, 0.853884, 0.847918, 0.841816, 0.835576, 0.829215, 0.822730,  &
      0.816140, 0.809446, 0.802656, 0.795787, 0.788849, 0.781842, 0.774774, 0.767666,  &
      0.760525, 0.753348, 0.746157, 0.738957, 0.731744, 0.724539, 0.717347, 0.710162,  &
      0.703003, 0.695871, 0.688770, 0.681694, 0.674670, 0.667690, 0.660742, 0.653854,  &
      0.647015, 0.640226, 0.633490, 0.626806, 0.620190, 0.613614, 0.607118, 0.600663,  &
      0.594277, 0.587944, 0.581678, 0.575476, 0.569319, 0.563236, 0.557201, 0.551210,  &
      0.545275, 0.539377, 0.533519, 0.527697, 0.521887, 0.516093, 0.510308, 0.504520,  &
      0.498703, 0.492853, 0.486993, 0.481080, 0.475148, 0.469156, 0.463102, 0.457022,  &
      0.450891, 0.444712, 0.438468, 0.432194, 0.425844, 0.419466, 0.413033, 0.406543,  &
      0.400004, 0.393422, 0.386787, 0.380117, 0.373390, 0.366627, 0.359804, 0.352944,  &
      0.346024, 0.339092, 0.332097, 0.325051, 0.317996, 0.310912, 0.303780, 0.296663   &
   ]

  real <const> :: b(NPOINTS) = [  &
      0.296046, 0.304731, 0.313417, 0.322082, 0.330719, 0.339349, 0.347916, 0.356448,  &
      0.364920, 0.373353, 0.381732, 0.390047, 0.398320, 0.406522, 0.414658, 0.422726,  &
      0.430745, 0.438676, 0.446549, 0.454351, 0.462068, 0.469724, 0.477285, 0.484772,  &
      0.492191, 0.499515, 0.506769, 0.513944, 0.521019, 0.528013, 0.534924, 0.541739,  &
      0.548485, 0.555119, 0.561680, 0.568142, 0.574519, 0.580821, 0.587036, 0.593184,  &
      0.599256, 0.605260, 0.611221, 0.617127, 0.622996, 0.628833, 0.634644, 0.640431,  &
      0.646198, 0.651956, 0.657697, 0.663420, 0.669124, 0.674811, 0.680476, 0.686131,  &
      0.691758, 0.697355, 0.702933, 0.708479, 0.713988, 0.719473, 0.724922, 0.730333,  &
      0.735705, 0.741043, 0.746349, 0.751618, 0.756839, 0.762024, 0.767172, 0.772284,  &
      0.777361, 0.782391, 0.787386, 0.792343, 0.797261, 0.802145, 0.806996, 0.811803,  &
      0.816577, 0.821310, 0.826006, 0.830667, 0.835284, 0.839864, 0.844395, 0.848884,  &
      0.853321, 0.857714, 0.862057, 0.866335, 0.870554, 0.874715, 0.878806, 0.882826,  &
      0.886778, 0.890643, 0.894433, 0.898128, 0.901737, 0.905253, 0.908662, 0.911968,  &
      0.915162, 0.918244, 0.921199, 0.924030, 0.926721, 0.929273, 0.931677, 0.933924,  &
      0.936016, 0.937931, 0.939674, 0.941231, 0.942607, 0.943781, 0.944761, 0.945533,  &
      0.946096, 0.946450, 0.946591, 0.946515, 0.946222, 0.945714, 0.944990, 0.944041,  &
      0.942874, 0.941475, 0.939848, 0.937971, 0.935838, 0.933427, 0.930741, 0.927747,  &
      0.924451, 0.920838, 0.916912, 0.912654, 0.908076, 0.903169, 0.897934, 0.892381,  &
      0.886503, 0.880298, 0.873781, 0.866944, 0.859800, 0.852344, 0.844574, 0.836502,  &
      0.828128, 0.819456, 0.810494, 0.801243, 0.791707, 0.781896, 0.771808, 0.761455,  &
      0.750858, 0.740012, 0.728931, 0.717646, 0.706155, 0.694478, 0.682651, 0.670686,  &
      0.658589, 0.646405, 0.634150, 0.621829, 0.609500, 0.597164, 0.584846, 0.572576,  &
      0.560369, 0.548257, 0.536247, 0.524370, 0.512641, 0.501084, 0.489693, 0.478509,  &
      0.467529, 0.456756, 0.446208, 0.435899, 0.425808, 0.415960, 0.406352, 0.396963,  &
      0.387823, 0.378914, 0.370223, 0.361769, 0.353512, 0.345472, 0.337637, 0.330000,  &
      0.322546, 0.315260, 0.308149, 0.301204, 0.294420, 0.287785, 0.281292, 0.274939,  &
      0.268721, 0.262603, 0.256604, 0.250720, 0.244926, 0.239258, 0.233647, 0.228166,  &
      0.222728, 0.217359, 0.212065, 0.206814, 0.201563, 0.196416, 0.191225, 0.186094,  &
      0.180910, 0.175743, 0.170584, 0.165356, 0.160123, 0.154884, 0.149612, 0.144259,  &
      0.138859, 0.133443, 0.127969, 0.122390, 0.116835, 0.111210, 0.105465, 0.099681,  &
      0.093826, 0.087904, 0.081888, 0.075659, 0.069479, 0.063040, 0.056434, 0.049637,  &
      0.042550, 0.035407, 0.028358, 0.021963, 0.016000, 0.010244, 0.005140, 0.000000   &
   ]

contains

  subroutine slisvg_color_map_bam__0green_to_1red( x, rr, gg, bb )
    real <in>  :: x
    real <out> :: rr, gg, bb

    real :: x1
    integer :: k

    x1 = 1 - x

    if (x1 <= z(1)) then
      rr = r(1)
      gg = g(1)
      bb = b(1)
      return
    else if (x1 >= z(NPOINTS)) then
      rr = r(NPOINTS)
      gg = g(NPOINTS)
      bb = b(NPOINTS)
      return
    endif

    do k = 1, NPOINTS-1
      if (x1 < z(k+1)) then
        rr = r(k) + (r(k+1)-r(k))*(x1-z(k))/(z(k+1)-z(k))
        gg = g(k) + (g(k+1)-g(k))*(x1-z(k))/(z(k+1)-z(k))
        bb = b(k) + (b(k+1)-b(k))*(x1-z(k))/(z(k+1)-z(k))
        return
      endif
    enddo
  end subroutine slisvg_color_map_bam__0green_to_1red


  subroutine slisvg_color_map_bam__print_colorbar( filename, nx, ny )
    char(len=*) <in> :: filename
    integer <in> :: nx, ny

    integer :: i,j,u
    real :: rr,gg,bb,x

    open(newunit=u, file=filename, status='replace', action='write')
      write(u,'(A)') 'P3'
      write(u,'(I0,1X,I0)') nx, ny
      write(u,'(I0)') 255

      do j = 1, ny
        do i = 1, nx
          x = real(i-1)/real(nx-1)
          call slisvg_color_map_bam__0green_to_1red( x, rr, gg, bb )
          write(u,'(3(I0,1X))', advance='no') int(rr*255), int(gg*255), int(bb*255)
        enddo
        write(u,*)
      enddo
    close(u)
  end subroutine slisvg_color_map_bam__print_colorbar

end module slisvg_color_map_bam_m
!
!
!program demo_bam
!  use colormap_bam_m
!  implicit none
!  real :: r,g,b
!  call slisvg_color_map_bam__rgb(-1.0, r,g,b); print *, "x=-1", r,g,b
!  call slisvg_color_map_bam__rgb( 0.0, r,g,b); print *, "x= 0", r,g,b
!  call slisvg_color_map_bam__rgb(+1.0, r,g,b); print *, "x=+1", r,g,b
!  call slisvg_color_map_bam__write_ppm("bam_colorbar.ppm",512,32)
!end program demo_bam

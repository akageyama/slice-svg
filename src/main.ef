program main
  use color_m
  use const_base_m
  use sketch_m
  use slice_m
  implicit none

  type(slice__scalar_t) :: prs

  type(sketch_t) :: fig1
  type(sketch__sim_pos_t) :: cross_section_lower_left
  type(sketch__sim_pos_t) :: cross_section_upper_right

  real :: window_width = 1200.0
  real :: window_height = 1000.0
  integer :: i, j
  real :: x, y, xmin, ymin, xmax, ymax

  integer <const> :: NU = 101, NV = 51

  real :: umin = -2*PI
  real :: umax = +2*PI
  real :: vmin = -PI
  real :: vmax = +PI

  real :: du, dv, u, v
  real :: u2, v2, x2, y2

  real, dimension(NU,NV) :: pressure

  type(slice__scalar_t) :: pres

  call const_base__check

  cross_section_lower_left.u = umin
  cross_section_lower_left.v = vmin
  cross_section_upper_right.u = umax
  cross_section_upper_right.v = vmax

  call fig1.initialize( cross_section_lower_left,     &
                        cross_section_upper_right,    &
                        screen_width_in_pixel=800.0,  &
                        title='fig1',                 &
                        filename='test1.svg' )

  call fig1.group_begin( line_width_in_pixel=10.0,  &
                         line_type='dashed' )

    call fig1.text( (umin+umax)/2, vmax,          &
                    'Hello, world!',              &
                    font_size_in_pixel=50.0,      &
                    text_anchor='middle',         &
                    color=COLOR__CONST.blue )

    call fig1.line( cross_section_upper_right, &
                    cross_section_lower_left,  &
  !                  width=2.0,    &
                    color=COLOR__CONST.black )
    call fig1.group_begin( line_color=COLOR__CONST.magenta )
    call fig1.line( cross_section_upper_right, &
                    cross_section_lower_left) 
    call fig1.group_end
  call fig1.group_end
  call fig1.rectangle( cross_section_lower_left,      &
                       cross_section_upper_right,     &
                       line_width_in_pixel=1.0,       &
                       line_color=COLOR__CONST.black )

  du = (umax-umin)/(NU-1)
  dv = (vmax-vmin)/(NV-1)

  do j = 1, NV
    do i = 1, NU
      u = umin + du*(i-1)
      v = vmin + dv*(j-1)
      pressure(i,j) = u**2+v**2
    end do
  end do
  
  call pres.initialize( NU, NV, umin, umax, vmin, vmax, pressure )
  call fig1.group_begin( line_color=COLOR__CONST.blue )
  call pres.vis_contour( fig1, 1.0 )
  call pres.finalize
  call fig1.group_end


  call fig1.finalize

end program main
